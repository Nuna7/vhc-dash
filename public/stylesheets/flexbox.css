.Flexbox {
	display: flex;
}

/* DIRECTION ================================================================ */

.Flexbox.mRev {
	flex-direction: row-reverse;
}

.Flexbox.mCol {
	flex-direction: column;
}

/* WRAPPING ================================================================= */

.Flexbox.mWrap {
	flex-wrap: wrap;
}

.Flexbox.mWrapRev {
	flex-wrap: wrap-reverse;
}

/* SPACING ================================================================== */

.Flexbox.mSpaceBtwn {
	justify-content: space-between;
}

.Flexbox.mStdSpacing {
	grid-gap: var(--std-spacing)
}

.Flexbox.mCmpSpacing {
	grid-gap: var(--cmp-spacing)
}

.Flexbox.mMinSpacing {
	grid-gap: var(--min-spacing)
}

/* GLOBAL ALIGNMENT ========================================================= */

.Flexbox.mHorzEnd {
	justify-content: flex-end;
}

.Flexbox.mHorzCenter {
	justify-content: center;
}

.Flexbox.mVertStart {
	align-items: flex-start;
}

.Flexbox.mVertEnd {
	align-items: flex-end;
}

.Flexbox.mVertCenter,
.Flexbox.mCol.mHorzCenter {
	align-items: center;
}

/* ITEM-WISE ALIGNMENT ====================================================== */

.Flexbox>.iAlignTop {
	align-self: flex-start;
}

.Flexbox>.iAlignBtm {
	align-self: flex-end;
}

.Flexbox>.iAlignRight {
	margin-left: auto;
}

.Flexbox>.iAlignCenter {
	align-self: center;
}

.Flexbox.mCol>.iAlignLeft {
	align-self: flex-start;
}

.Flexbox.mCol>.iAlignRight {
	align-self: flex-end;
}