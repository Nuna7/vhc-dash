/* VARIABLES ================================================================ */

:root {
	--off-white  : #bbbbbb;
	--black      : #111111;
	--dark-gray  : #444444;
	--light-gray : #a1a1a1;
	--red        : #9e2a2b;
	--green      : #226f54;
	--yellow     : #c09a33;
	--neon-green : #58aa8d;
	--std-spacing: 6ch;
	--cmp-spacing: 3ch;
	--min-spacing: 2ch;
	--font-bold  : 600;
}

/* GLOBAL =================================================================== */

* {
	box-sizing: border-box;
}

html,
body {
	--bg      : var(--off-white);
	--fg      : var(--black);
	height    : 100vh;
	overflow-y: auto;
	background: var(--bg);
	color     : var(--fg);
}

/* USER INTERACTION FEEDBACK ================================================ */

:focus {
	outline       : 1px dashed var(--black);
	outline-offset: 2px;
}

::selection {
	background-color: var(--fg);
	color           : var(--bg);
}

/* LINKS ==================================================================== */

a {
	color: inherit;
}

a:focus {
	text-decoration: none;
}

/* HEADINGS ================================================================= */

h1,
h2,
h3,
h4 {
	font-weight: normal;
	line-height: 1.3em;
}

:is(h1, h2, h3, h4, p, ul, ol)+ :is(h1, h2, h3, h4) {
	margin-top: 1.2em;
}

/* TEXT ELEMENTS ============================================================ */

p,
ul,
ol {
	line-height: 1.5em;
}

:is(h1, h2, h3, h4, p, ul, ol)+ :is(p, ul, ol) {
	margin-top: 1em;
}

p.mReadWidth {
	max-width: 750px;
}

ul {
	list-style-type: square;
}

/* TEXT FORMATTING ========================================================== */

.tGray {
	color: var(--dark-gray);
}

.tRed {
	color: var(--red);
}

/* UTILITIES ================================================================ */

.uNoWrap {
	white-space: nowrap;
}

/* DIVIDER COMPONENT ======================================================== */

.Divider {
	width     : 100%;
	height    : 0;
	border-top: 1px dotted var(--fg);
}

/* BOX COMPONENT ============================================================ */

.Box {
	--highlight     : var(--black);
	--box-padding   : var(--min-spacing);
	position        : relative;
	margin          : 0 0.5em 0.5em 0;
	padding         : var(--box-padding);
	border          : 1px dotted;
	border-bottom   : 2px dotted;
	border-left     : 3px solid var(--highlight);
	background-color: var(--bg);
	box-shadow      : 0.5em 0.5em #00000015;
}

.Box.mCompact {
	--box-padding: 0.7em;
}

.Box.mRoomy {
	--box-padding: var(--cmp-spacing);
}

.Box.mInvert {
	--bg            : var(--black);
	--fg            : var(--off-white);
	border          : none;
	background-color: var(--bg);
	color           : var(--fg);
}

.Box:not(.mRoomy):has(.cLabel, .lLabel, .rLabel) {
	padding-top: calc(var(--box-padding) + 0.5em);
}

.Box> :is(.cLabel, .lLabel, .rLabel) {
	position        : absolute;
	top             : 0;
	padding         : 0 calc(var(--box-padding) / 2);
	background-color: var(--bg);
	white-space     : nowrap;
}

.Box>.cLabel {
	left     : 50%;
	transform: translate(-50%, -50%);
}

.Box>.lLabel {
	left     : calc(var(--box-padding) / 2);
	transform: translateY(-50%);
}

.Box>.rLabel {
	right    : calc(var(--box-padding) / 2);
	transform: translateY(-50%);
}

/* POPUP ELEMENT ============================================================ */

.Popup {
	--base-color: var(--black);
	z-index     : 100;
	position    : absolute;
	inset       : 50% auto auto 50%;
	transform   : translate(-50%, -50%);
}

.Popup>.xBtn {
	position  : absolute;
	inset     : 0 0 auto auto;
	transform : translate(100%, -100%);
	box-shadow: 0 0 0 0.5em var(--off-white);
}

.Popup>.ribbon {
	z-index   : 1;
	position  : relative;
	height    : 1em;
	background: repeating-linear-gradient(45deg, var(--yellow) 0 1rem, var(--black) 1rem 2rem) -1px;
}

.Popup>.panel {
	--bg            : var(--base-color);
	--fg            : var(--off-white);
	padding         : var(--min-spacing);
	outline         : 1px dashed var(--base-color);
	outline-offset  : calc(0.5em - 1px);
	background-color: var(--bg);
	box-shadow      : 1em 1em #00000015,
		1em 1em 0 0.5em var(--fg),
		0 0 0 1em var(--fg),
		0 -1em 0 0.5em var(--fg);
	color: var(--fg);
}

.Popup>.panel>.content {
	max-width : 30em;
	max-height: 10em;
	overflow-y: auto;
}

.Popup.mRed {
	--base-color: var(--red);
}

body:has(.Popup) #Content::after {
	z-index   : 1;
	position  : absolute;
	inset     : 0;
	background: repeating-conic-gradient(var(--bg) 0% 25%, transparent 0% 100%) 1px 0.5px / 2px 2px;
	content   : "";
}