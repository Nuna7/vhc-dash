/* LABELS =================================================================== */

label {
	white-space: nowrap;
}

label.mReq::before {
	content: "* ";
	color: var(--red);
}

/* TEXT INPUTS ============================================================== */

input[type="text"],
input[type="email"],
input[type="password"],
textarea {
	min-width  : 20em;
	padding: 0.5em;
	border : 1px dotted;
}

:is(input[type="text"], input[type="email"], input[type="password"], textarea):focus {
	--bg: var(--black);
	--fg: var(--neon-green);

	outline       : 1px dashed var(--bg);
	border-color    : transparent;
	background-color: var(--bg);
	color           : var(--fg);
}

label+:is(input[type="text"], input[type="email"], input[type="password"], textarea) {
	display   : block;
	margin-top: 0.5em;
}

::placeholder {
	font-size: 0.9em;
	font-style: italic;
}

/* RADIO BUTTONS ============================================================ */

input[type="radio"].mButton {
	visibility: hidden;
	position  : absolute;
	width     : 0;
	height    : 0;
	margin    : 0;
}

label:has(input[type="radio"].mButton) {
	padding      : 0.3em;
	border       : 1px dotted var(--fg);
	border-bottom: 2px solid var(--dark-gray);
	cursor       : pointer;
}

label:has(input[type="radio"].mButton:disabled) {
	background: none;
	cursor    : not-allowed;
	opacity   : 0.2;
}

label:has(input[type="radio"].mButton:checked) {
	background : repeating-conic-gradient(var(--dark-gray) 0% 25%, transparent 0% 100%) 1px 0.5px / 2px 2px;
	font-weight: 600;
}

.RadioGroup>label:not(:last-child) {
	margin-right: -1px;
}

/* BUTTONS ================================================================== */

button {
	position        : relative;
	padding         : 0.5em 0.7em;
	background-color: var(--fg);
	color           : var(--bg);
	font-weight     : 600;
	white-space     : nowrap;
	cursor          : pointer;
}

button.mRed {
	background-color: var(--red);
	color           : var(--off-white);
}

button.mGreen {
	background-color: var(--green);
	color           : var(--off-white);
}

button.mTiny {
	padding         : 0.1em 0.3em;
	border          : 1px dotted var(--black);
	background-color: var(--bg);
	color           : var(--fg);
}

button:disabled:not(.sLoading) {
	cursor : not-allowed;
	opacity: 0.2;
}

button:disabled.sLoading::after {
	display    : grid;
	position   : absolute;
	place-items: center;
	width      : 100%;
	height     : 100%;
	inset      : 0 auto auto 0;
	background : repeating-conic-gradient(var(--fg) 0% 25%, color-mix(in srgb, var(--fg) 10%, var(--bg)) 0% 100%) 0 / 2px 2px;
	content    : "[|]";
	color      : var(--bg);
	font-weight: 700;
	font-size  : 1.2em;
	animation  : spinner 0.6s infinite;
	cursor     : progress;
}

@keyframes spinner {
	25% {
		content: "[/]";
	}

	50% {
		content: "[-]";
	}

	75% {
		content: "[\\]";
	}
}

/* FORM ERRORS ============================================================== */

.FormErrors {
	--fg: var(--off-white);
	--bg: var(--red);

	padding         : var(--cmp-spacing) var(--std-spacing) var(--cmp-spacing) var(--cmp-spacing);
	outline         : 1px solid var(--off-white);
	outline-offset  : calc(0px - var(--cmp-spacing) / 2);
	background-color: var(--bg);
	box-shadow      : 0.5em 0.5em #00000015;
	color           : var(--fg);
}